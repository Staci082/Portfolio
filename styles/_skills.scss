@use '../styles/variables' as *;

section#skills {
    position: relative;
    background: $background;
    @include flex;
}

.skills-container {
    @include flex;
    justify-content: space-evenly;
    height: 80vh;
    width: 80vw;

}

.grid {
    height: 90%;
    width: 30%;
    border: red solid 1px;
    padding-top: 100px;
}
#hexGrid {
    display: flex;
    flex-wrap: wrap;
    width: 90%;
    margin: 0 auto;
    overflow: hidden;
    list-style-type: none;
  }
  
  .hex {
    position: relative;
    visibility:hidden;
    outline:1px solid transparent; /* fix for jagged edges in FF on hover transition */
    transition: all 0.5s;
    backface-visibility: hidden;
    will-change: transform;
    transition: all 0.5s;
    font-size: 0.8rem;
  }
  .hex::after{
    content:'';
    display:block;
    padding-bottom: 86.602%;  /* =  100 / tan(60) * 1.5 */
  }
  .hexIn{
    position: absolute;
    width:96%;
    padding-bottom: 110.851%; /* =  width / sin(60) */
    margin: 2%;
    overflow: hidden;
    visibility: hidden;
    outline:1px solid transparent; /* fix for jagged edges in FF on hover transition */
    -webkit-transform: rotate3d(0,0,1,-60deg) skewY(30deg);
        -ms-transform: rotate3d(0,0,1,-60deg) skewY(30deg);
            transform: rotate3d(0,0,1,-60deg) skewY(30deg);
      transition: all 0.5s;
  }
  .hexIn * {
    position: absolute;
    visibility: visible;
    outline:1px solid transparent; /* fix for jagged edges in FF on hover transition */
  }
  .hexShape {
      @include flex;
      width: 100%;
      height: 100%;
      text-align: center;
      color: #fff;
      overflow: hidden;
      -webkit-transform: skewY(-30deg) rotate3d(0,0,1,60deg);
          -ms-transform: skewY(-30deg) rotate3d(0,0,1,60deg);
              transform: skewY(-30deg) rotate3d(0,0,1,60deg);
  }
  
  
  
  
  /*** HEX CONTENT **********************************************************************/
  .hex img {
    left: -100%;
    right: -100%;
    width: auto;
    height: 100%;
    margin: 0 auto;
  }
  
  .hex h1, .hex p {
    width: 100%;
    padding: 5%;
    box-sizing:border-box;
    font-weight: 300;
    opacity: 0;
  }
  
  #demo1 {
    color: #F5CE95;
    text-transform: capitalize;
      text-align: center;
    bottom: 50%;
    padding-top:50%;
    font-size: 1.5em;
    z-index: 1;
  }
  .hex h1:before, .hex h1:after {
    display: inline-block;
    margin: 0 0.5em;
    width: 0.25em;
    height: 0.03em;
    background: #ffffff;
    content: '';
    vertical-align: middle;
    transition: all 0.3s;
    text-align:center;
  }
  
  #demo2 {
  top: 50%;
  text-align: center;
  text-transform: uppercase;
      
  }
  
  .img {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-position: center center;
    background-size: cover;
    overflow: hidden;
  -webkit-clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  }
  
  .img:before, .img:after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: '';
    opacity: 0;
    transition: opacity 0.5s;
  }
  .img:before {
    background: rgba(22, 103, 137, 0.3)
  }
  .img:after {
    background: linear-gradient(to top, transparent, rgba(0, 0, 0, 0.5), transparent);
  }
  
  /*** HOVER EFFECT  **********************************************************************/
  
  
  
  .hexShape:hover h1, .hexShape:focus h1,
  .hexShape:hover p, .hexShape:focus p{
  opacity:1;
  transition: 0.8s;
  }
  
  
  .hexIn:hover .img:before,
  .hexIn:hover .img:after,
  .hexIn:hover .hexShape {
    opacity: 1;
  }
  
  
  /*** HEXAGON SIZING AND EVEN ROW INDENTATION *****************************************************************/
  @media (min-width:1201px) { /* <- 5-4  hexagons per row */
    #hexGrid{
      padding-bottom: 4.4%
    }
    .hex {
      width: 20%; /* = 100 / 5 */
    }
    .hex:nth-child(9n+6){ /* first hexagon of even rows */
      margin-left:10%;  /* = width of .hex / 2  to indent even rows */
    }
  }
  
  @media (max-width: 1200px) and (min-width:901px) { /* <- 4-3  hexagons per row */
    #hexGrid{
      padding-bottom: 5.5%;
      font-size: 13px;
    }
    .hex {
      width: 25%; /* = 100 / 4 */
    }
    .hex:nth-child(7n+5){ /* first hexagon of even rows */
      margin-left:12.5%;  /* = width of .hex / 2  to indent even rows */
    }
  }
  
  @media (max-width: 900px) and (min-width:601px) { /* <- 3-2  hexagons per row */
    #hexGrid{
      padding-bottom: 7.4%;
      font-size: 14px;
    }
    .hex {
      width: 33.333%; /* = 100 / 3 */
    }
    .hex:nth-child(5n+4){ /* first hexagon of even rows */
      margin-left:16.666%;  /* = width of .hex / 2  to indent even rows */
    }
  }
  
  @media (max-width: 600px) { /* <- 2-1  hexagons per row */
    #hexGrid{
      padding-bottom: 11.2%;
      font-size: 12px;
    }
    .hex {
      width: 50%; /* = 100 / 3 */
    }
    .hex:nth-child(3n+3){ /* first hexagon of even rows */
      margin-left:25%;  /* = width of .hex / 2  to indent even rows */
    }
  }
  
  @media (max-width: 400px) {
      #hexGrid {
          font-size: 8px;
      }
    
  
    
   
  }
  

// WEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE


  *::before, *::after {
    padding: 0;
    margin: 0 auto;
    box-sizing: border-box;
  }
  
$size: 50px;
$speed: 5s;

$clr1: #0ff;
$clr2: #f0f;
$clr3: #ff0;


.fun-container {
  position: relative;
  transform-style: preserve-3d;
  // transform: rotateY(0deg);
  animation: rotate $speed * 2.7 infinite linear;

  @keyframes rotate {
    from { transform: rotatex(0deg) rotateY(0deg) rotateZ(0deg); }
    to { transform: rotatex(360deg) rotateY(720deg) rotateZ(360deg); }
  }

}

.pole {
  position: absolute;
  transform-style: preserve-3d;

  @for $p from 0 to 6 {
    &:nth-child(#{$p + 1}) {
      transform: rotate($p * 60deg) translateX($size * 3);
      & > div::before {
        animation-delay: $speed / -6 * ($p + 0.5);
      }
    }
  }

  & > div {
    position: absolute;
    background-color: #111;
    box-shadow: 0 0 $size * 0.5 #000 inset;
    overflow: hidden;

    &::before {
      content: '';
      position: absolute;
      top: 50%; left: 50%;
      width: 100%; height: $size * 2;
      opacity: 0.25;
      animation:
        poleBack $speed/3 infinite linear,
        poleColor $speed infinite step-end reverse;
    }

    @keyframes poleBack {
      0%   { transform: translate(-50%, calc(-50% + (var(--pb1) * #{$size * 1}))) skewY(calc(var(--pb2) *  1)); }
      100% { transform: translate(-50%, calc(-50% - (var(--pb1) * #{$size * 1}))) skewY(calc(var(--pb2) * -1)); }
    }
    @keyframes poleColor {
      0%      { background-image: linear-gradient(#{$clr1}0, $clr1, #{$clr1}0); }
      33.333% { background-image: linear-gradient(#{$clr2}0, $clr2, #{$clr2}0); }
      66.666% { background-image: linear-gradient(#{$clr3}0, $clr3, #{$clr3}0); }
    }
  }

  & > div:nth-child(1) {
    width: $size; height: 4.05 * $size;
    transform: translate(-50%, -50%) translateZ($size * 0.5);
    clip-path: polygon(100% 0, 100% 100%, 0 $size * 3.47, 0 $size * 0.58);
    --pb1: 3.47; --pb2: 55deg;
  }
  & > div:nth-child(2) {
    width: $size; height: 4.05 * $size;
    transform: translate(-50%, -50%) rotateY(90deg) translateZ($size * 0.5);
    --pb1: 4.05; --pb2: 0deg;
  }
  & > div:nth-child(3) {
    width: $size; height: 4.05 * $size;
    transform: translate(-50%, -50%) rotateY(180deg) translateZ($size * 0.5);
    clip-path: polygon(0 0, 0 100%, 100% $size * 3.47, 100% $size * 0.58);
    --pb1: 3.47; --pb2: -55deg;
  }
  & > div:nth-child(4) {
    width: $size; height: 2.89 * $size;
    transform: translate(-50%, -50%) rotateY(270deg) translateZ($size * 0.5);
    --pb1:2.89; --pb2: 0deg;
  }
}

.neon {
  position: absolute;
  top: $size * 1.7; left: $size * -3;
  width: $size * 2; height: $size * 2;
  border: 2px solid var(--clr);
  transform: translate(-50%, -50%) rotateY(90deg) rotateX(120deg);
  transform-style: preserve-3d;
  animation: neonRotate $speed infinite linear;
  box-shadow:
    0 0 $size*0.2 var(--clr) inset,
    0 0 $size*0.2 var(--clr);

  &_a { --clr: #{$clr1}; }
  &_b { --clr: #{$clr2}; animation-delay: $speed / -3;}
  &_c { --clr: #{$clr3}; animation-delay: $speed / -1.5;}

  & > div {
    position: absolute;
    background-color: var(--clr);
    box-shadow: 0 0 $size*0.2 var(--clr);

    &:nth-child(1) {
      top: -1px; left: -1px;
      width: calc(100% + 2px); height: 2px;
      transform: translateY(-50%) rotateX(90deg);
    }
    &:nth-child(2) {
      top: -1px; left: -2px;
      width: 2px; height: calc(100% + 2px);
      transform: rotateY(90deg);
    }
    &:nth-child(3) {
      bottom: -1px; left: -1px;
      width: calc(100% + 2px); height: 2px;
      transform: translateY(50%) rotateX(90deg);
    }
    &:nth-child(4) {
      top: -1px; right: -2px;
      width: 2px; height: calc(100% + 2px);
      transform: rotateY(90deg);
    }
  }

  @keyframes neonRotate {
    0% {
      top: $size * -3.4; left: 0;
      transform: translate(-50%, -50%) rotateY(90deg) rotateX(0);
    }
    16.666% {
      top: $size * -1.7; left: $size * -3;
      transform: translate(-50%, -50%) rotateY(90deg) rotateX(60deg);
    }
    33.333% {
      top: $size * 1.7; left: $size * -3;
      transform: translate(-50%, -50%) rotateY(90deg) rotateX(120deg);
    }
    50% {
      top: $size * 3.4; left: 0;
      transform: translate(-50%, -50%) rotateY(90deg) rotateX(180deg);
    }
    66.666% {
      top: $size * 1.7; left: $size * 3;
      transform: translate(-50%, -50%) rotateY(90deg) rotateX(240deg);
    }
    83.333% {
      top: $size * -1.7; left: $size * 3;
      transform: translate(-50%, -50%) rotateY(90deg) rotateX(300deg);
    }
    100% {
      top: $size * -3.4; left: 0;
      transform: translate(-50%, -50%) rotateY(90deg) rotateX(360deg);
    }
  }
}